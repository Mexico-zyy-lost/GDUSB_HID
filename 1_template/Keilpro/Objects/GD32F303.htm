<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\GD32F303.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\GD32F303.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Sat Jul 15 10:56:03 2023
<BR><P>
<H3>Maximum Stack Usage =         72 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USBD_LP_CAN0_RX0_IRQHandler &rArr; usbd_isr &rArr; usbd_ep_send
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[41]">ADC0_1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[41]">ADC0_1_IRQHandler</a><BR>
 <LI><a href="#[29]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[29]">BusFault_Handler</a><BR>
 <LI><a href="#[27]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">HardFault_Handler</a><BR>
 <LI><a href="#[28]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">MemManage_Handler</a><BR>
 <LI><a href="#[2a]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2a]">UsageFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[41]">ADC0_1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[5e]">ADC2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[29]">BusFault_Handler</a> from gd32f30x_it.o(i.BusFault_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[45]">CAN0_EWMC_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[44]">CAN0_RX1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3a]">DMA0_Channel0_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3b]">DMA0_Channel1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3c]">DMA0_Channel2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3d]">DMA0_Channel3_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3e]">DMA0_Channel4_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[3f]">DMA0_Channel5_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[40]">DMA0_Channel6_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[67]">DMA1_Channel0_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[68]">DMA1_Channel1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[69]">DMA1_Channel2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[6a]">DMA1_Channel3_4_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2c]">DebugMon_Handler</a> from gd32f30x_it.o(i.DebugMon_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[5f]">EXMC_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[35]">EXTI0_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[57]">EXTI10_15_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[36]">EXTI1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[37]">EXTI2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[38]">EXTI3_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[39]">EXTI4_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[46]">EXTI5_9_IRQHandler</a> from main.o(i.EXTI5_9_IRQHandler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[33]">FMC_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[27]">HardFault_Handler</a> from gd32f30x_it.o(i.HardFault_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[4f]">I2C0_ER_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[4e]">I2C0_EV_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[51]">I2C1_ER_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[50]">I2C1_EV_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[30]">LVD_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[28]">MemManage_Handler</a> from gd32f30x_it.o(i.MemManage_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[26]">NMI_Handler</a> from gd32f30x_it.o(i.NMI_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2d]">PendSV_Handler</a> from gd32f30x_it.o(i.PendSV_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[34]">RCU_CTC_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[58]">RTC_Alarm_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[32]">RTC_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[25]">Reset_Handler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[60]">SDIO_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[52]">SPI0_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[53]">SPI1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[62]">SPI2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2b]">SVC_Handler</a> from gd32f30x_it.o(i.SVC_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2e]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[6c]">SystemInit</a> from system_gd32f30x.o(i.SystemInit) referenced from startup_gd32f30x_hd.o(.text)
 <LI><a href="#[31]">TAMPER_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[47]">TIMER0_BRK_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[4a]">TIMER0_Channel_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[49]">TIMER0_TRG_CMT_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[48]">TIMER0_UP_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[4b]">TIMER1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[4c]">TIMER2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[4d]">TIMER3_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[61]">TIMER4_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[65]">TIMER5_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[66]">TIMER6_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[5a]">TIMER7_BRK_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[5d]">TIMER7_Channel_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[5c]">TIMER7_TRG_CMT_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[5b]">TIMER7_UP_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[63]">UART3_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[64]">UART4_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[54]">USART0_IRQHandler</a> from main.o(i.USART0_IRQHandler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[55]">USART1_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[56]">USART2_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[42]">USBD_HP_CAN0_TX_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[43]">USBD_LP_CAN0_RX0_IRQHandler</a> from gd32f30x_it.o(i.USBD_LP_CAN0_RX0_IRQHandler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[59]">USBD_WKUP_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2a]">UsageFault_Handler</a> from gd32f30x_it.o(i.UsageFault_Handler) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[2f]">WWDGT_IRQHandler</a> from startup_gd32f30x_hd.o(.text) referenced from startup_gd32f30x_hd.o(RESET)
 <LI><a href="#[6d]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_gd32f30x_hd.o(.text)
 <LI><a href="#[1f]">_usb_config_desc_get</a> from usbd_enum.o(i._usb_config_desc_get) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[1e]">_usb_dev_desc_get</a> from usbd_enum.o(i._usb_dev_desc_get) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[70]">_usb_in0_transc</a> from usbd_transc.o(i._usb_in0_transc) referenced from usbd_core.o(i.usbd_init)
 <LI><a href="#[6f]">_usb_out0_transc</a> from usbd_transc.o(i._usb_out0_transc) referenced from usbd_core.o(i.usbd_init)
 <LI><a href="#[6e]">_usb_setup_transc</a> from usbd_transc.o(i._usb_setup_transc) referenced from usbd_core.o(i.usbd_init)
 <LI><a href="#[13]">_usb_std_clearfeature</a> from usbd_enum.o(i._usb_std_clearfeature) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[19]">_usb_std_getconfiguration</a> from usbd_enum.o(i._usb_std_getconfiguration) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[17]">_usb_std_getdescriptor</a> from usbd_enum.o(i._usb_std_getdescriptor) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[1b]">_usb_std_getinterface</a> from usbd_enum.o(i._usb_std_getinterface) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[12]">_usb_std_getstatus</a> from usbd_enum.o(i._usb_std_getstatus) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[14]">_usb_std_reserved</a> from usbd_enum.o(i._usb_std_reserved) referenced 4 times from usbd_enum.o(.data)
 <LI><a href="#[16]">_usb_std_setaddress</a> from usbd_enum.o(i._usb_std_setaddress) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[1a]">_usb_std_setconfiguration</a> from usbd_enum.o(i._usb_std_setconfiguration) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[18]">_usb_std_setdescriptor</a> from usbd_enum.o(i._usb_std_setdescriptor) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[15]">_usb_std_setfeature</a> from usbd_enum.o(i._usb_std_setfeature) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[1c]">_usb_std_setinterface</a> from usbd_enum.o(i._usb_std_setinterface) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[1d]">_usb_std_synchframe</a> from usbd_enum.o(i._usb_std_synchframe) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[20]">_usb_str_desc_get</a> from usbd_enum.o(i._usb_str_desc_get) referenced 2 times from usbd_enum.o(.data)
 <LI><a href="#[24]">hid_data_in_handler</a> from standard_hid_core.o(i.hid_data_in_handler) referenced 2 times from standard_hid_core.o(.data)
 <LI><a href="#[22]">hid_deinit</a> from standard_hid_core.o(i.hid_deinit) referenced 2 times from standard_hid_core.o(.data)
 <LI><a href="#[21]">hid_init</a> from standard_hid_core.o(i.hid_init) referenced 2 times from standard_hid_core.o(.data)
 <LI><a href="#[1]">hid_key_data_send</a> from hid_keyboard_itf.o(i.hid_key_data_send) referenced 2 times from hid_keyboard_itf.o(.data)
 <LI><a href="#[23]">hid_req_handler</a> from standard_hid_core.o(i.hid_req_handler) referenced 2 times from standard_hid_core.o(.data)
 <LI><a href="#[0]">key_config</a> from hid_keyboard_itf.o(i.key_config) referenced 2 times from hid_keyboard_itf.o(.data)
 <LI><a href="#[6b]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[5]">usbd_address_set</a> from usbd_lld_core.o(i.usbd_address_set) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[2]">usbd_core_reset</a> from usbd_lld_core.o(i.usbd_core_reset) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[3]">usbd_core_stop</a> from usbd_lld_core.o(i.usbd_core_stop) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[4]">usbd_dp_pullup</a> from usbd_lld_core.o(i.usbd_dp_pullup) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[e]">usbd_ep_data_read</a> from usbd_lld_core.o(i.usbd_ep_data_read) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[d]">usbd_ep_data_write</a> from usbd_lld_core.o(i.usbd_ep_data_write) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[b]">usbd_ep_disable</a> from usbd_lld_core.o(i.usbd_ep_disable) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[9]">usbd_ep_reset</a> from usbd_lld_core.o(i.usbd_ep_reset) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[c]">usbd_ep_rx_enable</a> from usbd_lld_core.o(i.usbd_ep_rx_enable) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[a]">usbd_ep_setup</a> from usbd_lld_core.o(i.usbd_ep_setup) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[10]">usbd_ep_stall_clear</a> from usbd_lld_core.o(i.usbd_ep_stall_clear) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[f]">usbd_ep_stall_set</a> from usbd_lld_core.o(i.usbd_ep_stall_set) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[11]">usbd_ep_status</a> from usbd_lld_core.o(i.usbd_ep_status) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[7]">usbd_leave_suspend</a> from usbd_lld_core.o(i.usbd_leave_suspend) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[8]">usbd_resume</a> from usbd_lld_core.o(i.usbd_resume) referenced 2 times from usbd_lld_core.o(.data)
 <LI><a href="#[6]">usbd_suspend</a> from usbd_lld_core.o(i.usbd_suspend) referenced 2 times from usbd_lld_core.o(.data)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6d]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(.text)
</UL>
<P><STRONG><a name="[b0]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[71]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[76]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b1]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b2]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b3]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b4]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[b5]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[b6]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[25]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>ADC0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>ADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>CAN0_EWMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CAN0_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA0_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA0_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA0_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA0_Channel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA0_Channel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA0_Channel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>DMA0_Channel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>DMA1_Channel0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DMA1_Channel2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>DMA1_Channel3_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>EXMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>EXTI10_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>I2C0_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>I2C0_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>LVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>RCU_CTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>TIMER0_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>TIMER0_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIMER0_TRG_CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>TIMER0_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>TIMER4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>TIMER5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>TIMER6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>TIMER7_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>TIMER7_Channel_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>TIMER7_TRG_CMT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>TIMER7_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>USBD_HP_CAN0_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>USBD_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>WWDGT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_gd32f30x_hd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[97]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_init
</UL>

<P><STRONG><a name="[b9]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[75]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[72]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ba]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[77]"></a>Activate_ALL_ROW</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, key.o(i.Activate_ALL_ROW))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Activate_ALL_ROW
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Activate_ROW
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_MATRIX_Scan
</UL>

<P><STRONG><a name="[78]"></a>Activate_ROW</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, key.o(i.Activate_ROW))
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Activate_ALL_ROW
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_MATRIX_Scan
</UL>

<P><STRONG><a name="[29]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>EXTI5_9_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, main.o(i.EXTI5_9_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI5_9_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_get
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>KEY_MATRIX_Scan</STRONG> (Thumb, 208 bytes, Stack size 48 bytes, key.o(i.KEY_MATRIX_Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = KEY_MATRIX_Scan &rArr; Activate_ALL_ROW
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_state_get
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_filter
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Activate_ROW
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Activate_ALL_ROW
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[28]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>SysTick_Handler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SysTick_Handler &rArr; gd_led_toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_led_toggle
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_decrement
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>SystemInit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, system_gd32f30x.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_120m_irc8m
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>USART0_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, main.o(i.USART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART0_IRQHandler &rArr; usart_interrupt_flag_get
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_flag_get
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_put_char
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>USBD_LP_CAN0_RX0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gd32f30x_it.o(i.USBD_LP_CAN0_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USBD_LP_CAN0_RX0_IRQHandler &rArr; usbd_isr &rArr; usbd_ep_send
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gd32f30x_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_gd32f30x_hd.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[be]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[bf]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[70]"></a>_usb_in0_transc</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, usbd_transc.o(i._usb_in0_transc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _usb_in0_transc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(i.usbd_init)
</UL>
<P><STRONG><a name="[6f]"></a>_usb_out0_transc</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, usbd_transc.o(i._usb_out0_transc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _usb_out0_transc &rArr; usb_ctl_status_in
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ctl_status_in
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(i.usbd_init)
</UL>
<P><STRONG><a name="[6e]"></a>_usb_setup_transc</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, usbd_transc.o(i._usb_setup_transc))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _usb_setup_transc &rArr; usbd_ep_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_stall_transc
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_ctl_status_in
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_vendor_request
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_standard_request
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_class_request
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(i.usbd_init)
</UL>
<P><STRONG><a name="[87]"></a>com_put_char</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usart.o(i.com_put_char))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = com_put_char
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>delay_1ms</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, systick.o(i.delay_1ms))
<BR><BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_key_data_send
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_MATRIX_Scan
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_9_IRQHandler
</UL>

<P><STRONG><a name="[81]"></a>delay_decrement</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, systick.o(i.delay_decrement))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[96]"></a>exti_init</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, gd32f30x_exti.o(i.exti_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = exti_init
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_key_init
</UL>

<P><STRONG><a name="[7b]"></a>exti_interrupt_flag_clear</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gd32f30x_exti.o(i.exti_interrupt_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_key_init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_9_IRQHandler
</UL>

<P><STRONG><a name="[7a]"></a>exti_interrupt_flag_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gd32f30x_exti.o(i.exti_interrupt_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_9_IRQHandler
</UL>

<P><STRONG><a name="[91]"></a>gd_key_init</STRONG> (Thumb, 452 bytes, Stack size 40 bytes, key.o(i.gd_key_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = gd_key_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_exti_source_select
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exti_interrupt_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a9]"></a>gd_led_off</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, led.o(i.gd_led_off))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[aa]"></a>gd_led_on</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, led.o(i.gd_led_on))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[82]"></a>gd_led_toggle</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, led.o(i.gd_led_toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gd_led_toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_bit_write
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[79]"></a>gpio_bit_write</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_gpio.o(i.gpio_bit_write))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Activate_ROW
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_led_toggle
</UL>

<P><STRONG><a name="[95]"></a>gpio_exti_source_select</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gd32f30x_gpio.o(i.gpio_exti_source_select))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = gpio_exti_source_select
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_key_init
</UL>

<P><STRONG><a name="[93]"></a>gpio_init</STRONG> (Thumb, 160 bytes, Stack size 28 bytes, gd32f30x_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_key_init
</UL>

<P><STRONG><a name="[7d]"></a>gpio_input_bit_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_gpio.o(i.gpio_input_bit_get))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_state_get
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_led_toggle
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI5_9_IRQHandler
</UL>

<P><STRONG><a name="[a4]"></a>gpio_pin_remap_config</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, gd32f30x_gpio.o(i.gpio_pin_remap_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = gpio_pin_remap_config
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a6]"></a>hid_itfop_register</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, standard_hid_core.o(i.hid_itfop_register))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>hid_report_send</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, standard_hid_core.o(i.hid_report_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hid_report_send &rArr; usbd_ep_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_send
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_key_data_send
</UL>

<P><STRONG><a name="[80]"></a>key_filter</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, key.o(i.key_filter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = key_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_state_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_MATRIX_Scan
</UL>

<P><STRONG><a name="[7f]"></a>key_state_get</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, key.o(i.key_state_get))
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_input_bit_get
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key_filter
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_MATRIX_Scan
</UL>

<P><STRONG><a name="[6b]"></a>main</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = main &rArr; gd_key_init &rArr; gpio_init
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_config
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_ahb_clock_config
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_itfop_register
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_pin_remap_config
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_led_on
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_led_off
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_key_init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KEY_MATRIX_Scan
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[a8]"></a>nvic_config</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gd32f30x_usbd_hw.o(i.nvic_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nvic_config &rArr; nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[94]"></a>nvic_irq_enable</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, gd32f30x_misc.o(i.nvic_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nvic_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_set
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_key_init
</UL>

<P><STRONG><a name="[ab]"></a>nvic_priority_group_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_misc.o(i.nvic_priority_group_set))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_config
</UL>

<P><STRONG><a name="[a2]"></a>rcu_ahb_clock_config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_ahb_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a0]"></a>rcu_clock_freq_get</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, gd32f30x_rcu.o(i.rcu_clock_freq_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = rcu_clock_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowpower_mode_exit
</UL>

<P><STRONG><a name="[a5]"></a>rcu_config</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gd32f30x_usbd_hw.o(i.rcu_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rcu_config &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_usb_clock_config
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9b]"></a>rcu_flag_get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowpower_mode_exit
</UL>

<P><STRONG><a name="[9a]"></a>rcu_osci_on</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_osci_on))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowpower_mode_exit
</UL>

<P><STRONG><a name="[9f]"></a>rcu_periph_clock_disable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_periph_clock_disable))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowpower_mode_exit
</UL>

<P><STRONG><a name="[92]"></a>rcu_periph_clock_enable</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_periph_clock_enable))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_config
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gd_key_init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowpower_mode_exit
</UL>

<P><STRONG><a name="[9c]"></a>rcu_system_clock_source_config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_system_clock_source_config))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowpower_mode_exit
</UL>

<P><STRONG><a name="[9d]"></a>rcu_system_clock_source_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_system_clock_source_get))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowpower_mode_exit
</UL>

<P><STRONG><a name="[a1]"></a>rcu_usb_clock_config</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gd32f30x_rcu.o(i.rcu_usb_clock_config))
<BR><BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_config
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowpower_mode_exit
</UL>

<P><STRONG><a name="[ac]"></a>serial_string_get</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, usbd_enum.o(i.serial_string_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = serial_string_get &rArr; int_to_unicode
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_unicode
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_init
</UL>

<P><STRONG><a name="[9e]"></a>system_lowpower_reset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gd32f30x_misc.o(i.system_lowpower_reset))
<BR><BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowpower_mode_exit
</UL>

<P><STRONG><a name="[a3]"></a>systick_config</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, systick.o(i.systick_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = systick_config
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[86]"></a>usart_data_receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[90]"></a>usart_data_transmit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_put_char
</UL>

<P><STRONG><a name="[85]"></a>usart_flag_get</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gd32f30x_usart.o(i.usart_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;com_put_char
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[84]"></a>usart_interrupt_flag_get</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, gd32f30x_usart.o(i.usart_interrupt_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usart_interrupt_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART0_IRQHandler
</UL>

<P><STRONG><a name="[8b]"></a>usbd_class_request</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, usbd_enum.o(i.usbd_class_request))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_setup_transc
</UL>

<P><STRONG><a name="[8e]"></a>usbd_ep_send</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, usbd_core.o(i.usbd_ep_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_ep_send
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_report_send
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_isr
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_data_in_handler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_setup_transc
</UL>

<P><STRONG><a name="[a7]"></a>usbd_init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, usbd_core.o(i.usbd_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = usbd_init &rArr; serial_string_get &rArr; int_to_unicode
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_string_get
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>usbd_isr</STRONG> (Thumb, 458 bytes, Stack size 48 bytes, usbd_lld_int.o(i.usbd_isr))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = usbd_isr &rArr; usbd_ep_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_send
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_LP_CAN0_RX0_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>usbd_standard_request</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbd_enum.o(i.usbd_standard_request))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_setup_transc
</UL>

<P><STRONG><a name="[8c]"></a>usbd_vendor_request</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_enum.o(i.usbd_vendor_request))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_setup_transc
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[ae]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, systick.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_config
</UL>

<P><STRONG><a name="[83]"></a>system_clock_120m_irc8m</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, system_gd32f30x.o(i.system_clock_120m_irc8m))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[1]"></a>hid_key_data_send</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, hid_keyboard_itf.o(i.hid_key_data_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = hid_key_data_send &rArr; hid_report_send &rArr; usbd_ep_send
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hid_report_send
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_1ms
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hid_keyboard_itf.o(.data)
</UL>
<P><STRONG><a name="[0]"></a>key_config</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hid_keyboard_itf.o(i.key_config))
<BR>[Address Reference Count : 1]<UL><LI> hid_keyboard_itf.o(.data)
</UL>
<P><STRONG><a name="[99]"></a>lowpower_mode_exit</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, usbd_lld_core.o(i.lowpower_mode_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = lowpower_mode_exit &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_usb_clock_config
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_clock_freq_get
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_enable
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_lowpower_reset
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_system_clock_source_get
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_system_clock_source_config
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_periph_clock_disable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_osci_on
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rcu_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_leave_suspend
</UL>

<P><STRONG><a name="[5]"></a>usbd_address_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbd_lld_core.o(i.usbd_address_set))
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[2]"></a>usbd_core_reset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usbd_lld_core.o(i.usbd_core_reset))
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>usbd_core_stop</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbd_lld_core.o(i.usbd_core_stop))
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[4]"></a>usbd_dp_pullup</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_lld_core.o(i.usbd_dp_pullup))
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>usbd_ep_data_read</STRONG> (Thumb, 84 bytes, Stack size 12 bytes, usbd_lld_core.o(i.usbd_ep_data_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usbd_ep_data_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>usbd_ep_data_write</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, usbd_lld_core.o(i.usbd_ep_data_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = usbd_ep_data_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>usbd_ep_disable</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, usbd_lld_core.o(i.usbd_ep_disable))
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>usbd_ep_reset</STRONG> (Thumb, 86 bytes, Stack size 12 bytes, usbd_lld_core.o(i.usbd_ep_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = usbd_ep_reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>usbd_ep_rx_enable</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usbd_lld_core.o(i.usbd_ep_rx_enable))
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>usbd_ep_setup</STRONG> (Thumb, 308 bytes, Stack size 36 bytes, usbd_lld_core.o(i.usbd_ep_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = usbd_ep_setup
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>usbd_ep_stall_clear</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, usbd_lld_core.o(i.usbd_ep_stall_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usbd_ep_stall_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_status_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>usbd_ep_stall_set</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, usbd_lld_core.o(i.usbd_ep_stall_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = usbd_ep_stall_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>usbd_ep_status</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, usbd_lld_core.o(i.usbd_ep_status))
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[af]"></a>usbd_ep_status_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_lld_core.o(i.usbd_ep_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_stall_clear
</UL>

<P><STRONG><a name="[7]"></a>usbd_leave_suspend</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbd_lld_core.o(i.usbd_leave_suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = usbd_leave_suspend &rArr; lowpower_mode_exit &rArr; rcu_clock_freq_get
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lowpower_mode_exit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>usbd_resume</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, usbd_lld_core.o(i.usbd_resume))
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>usbd_suspend</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbd_lld_core.o(i.usbd_suspend))
<BR>[Address Reference Count : 1]<UL><LI> usbd_lld_core.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>_usb_config_desc_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_config_desc_get))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>_usb_dev_desc_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_dev_desc_get))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>_usb_std_clearfeature</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, usbd_enum.o(i._usb_std_clearfeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _usb_std_clearfeature
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_status_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>_usb_std_getconfiguration</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, usbd_enum.o(i._usb_std_getconfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _usb_std_getconfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>_usb_std_getdescriptor</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, usbd_enum.o(i._usb_std_getdescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _usb_std_getdescriptor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>_usb_std_getinterface</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usbd_enum.o(i._usb_std_getinterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _usb_std_getinterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>_usb_std_getstatus</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, usbd_enum.o(i._usb_std_getstatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _usb_std_getstatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>_usb_std_reserved</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_std_reserved))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>_usb_std_setaddress</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_std_setaddress))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>_usb_std_setconfiguration</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, usbd_enum.o(i._usb_std_setconfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _usb_std_setconfiguration
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>_usb_std_setdescriptor</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_std_setdescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>_usb_std_setfeature</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, usbd_enum.o(i._usb_std_setfeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _usb_std_setfeature
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_status_get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>_usb_std_setinterface</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, usbd_enum.o(i._usb_std_setinterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _usb_std_setinterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>_usb_std_synchframe</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_std_synchframe))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>_usb_str_desc_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbd_enum.o(i._usb_str_desc_get))
<BR>[Address Reference Count : 1]<UL><LI> usbd_enum.o(.data)
</UL>
<P><STRONG><a name="[ad]"></a>int_to_unicode</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, usbd_enum.o(i.int_to_unicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = int_to_unicode
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;serial_string_get
</UL>

<P><STRONG><a name="[8f]"></a>usbd_ep_status_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_enum.o(i.usbd_ep_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_std_setfeature
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_std_clearfeature
</UL>

<P><STRONG><a name="[89]"></a>usb_ctl_status_in</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbd_transc.o(i.usb_ctl_status_in))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = usb_ctl_status_in
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_setup_transc
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_out0_transc
</UL>

<P><STRONG><a name="[8d]"></a>usb_stall_transc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usbd_transc.o(i.usb_stall_transc))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_usb_setup_transc
</UL>

<P><STRONG><a name="[24]"></a>hid_data_in_handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, standard_hid_core.o(i.hid_data_in_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = hid_data_in_handler &rArr; usbd_ep_send
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usbd_ep_send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standard_hid_core.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>hid_deinit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, standard_hid_core.o(i.hid_deinit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = hid_deinit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standard_hid_core.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>hid_init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, standard_hid_core.o(i.hid_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hid_init
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standard_hid_core.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>hid_req_handler</STRONG> (Thumb, 126 bytes, Stack size 12 bytes, standard_hid_core.o(i.hid_req_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = hid_req_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standard_hid_core.o(.data)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
